"Fizzlers"
	{
	// We have two type of this, and therefore two fizzler types. We just swap to timer
	// if needed.
	"Fizzler"
		{
		"ID"            "BEE2_PRO_LIFEFORM_SENSOR"
		"Item_ID"       "ITEM_PRO_LIFEFORM_SENSOR"
		
		"Base"          "<ITEM_PRO_LIFEFORM_SENSOR:fizz_base>"
		"Model"         "<ITEM_PRO_LIFEFORM_SENSOR:fizz_model>"

		"OutActivate"   "instance:out;OnUser2"
		"OutDeactivate" "instance:out;OnUser1"

		"TemplateBrush"	
			{
			"Left"      "PRO_LIFEFORM_SENSOR_TEMP:side"
			"Right"     "PRO_LIFEFORM_SENSOR_TEMP:side"
			// Shrink the length so the curve fits in the space..
			"Single"    "PRO_LIFEFORM_SENSOR_TEMP:single"
			
			"Keys"
				{
				"classname"  "func_brush"
				"solidity"   "1"  // Never solid
				"spawnflags" "1" // No +use output
				}
			"LocalKeys"
				{
				"targetname" "field"
				}
			}
	
		"Brush"
			{
			"Name"          "fizz"
			
		    "tex_trigger"   "tools/toolstrigger"
			"Singular" "1"
		    
			"Keys"
				{
				"classname"     "trigger_multiple"
				"Spawnflags"    "1" // Clients
				"vscripts"      "BEE2/lifeform_sensor.nut"
				}
			"set_axis_var" "1" // Save the plane axis to the "axis" vscript variable.
			"Outputs"
				{
				"OnUser1"  "out,ToggleTest,,0,-1"
				// Produces "electronic beeping."
				"OnUser1" "@command,Command,cc_emit World.RobotNegInteractPitchedUp,0,-1"
				}
			}
		}
	}

"Conditions"
	{
	"Condition"  
		{
		"instance"  "<ITEM_PRO_LIFEFORM_SENSOR:fizz_base>"
		"Result"
			{
			"Has"
				{
				"Fizzler"           "1"
				"ProLifeformSensor" "1"
				}
			"GlobalInput"
				{
				// We need to ensure the modify_control is "initialised" with the correct function.
				"input"  "StartFloatLerp"
				"param"  "0.1 0 0.2 0"
				"target" "mod"
				}
			"Pack"  "PACK_BEE2_CUST_FIZZ_MDL"
			"Pack"  "PACK_PRO_LIFEFORM_SENSOR"
			}
		}
	}
